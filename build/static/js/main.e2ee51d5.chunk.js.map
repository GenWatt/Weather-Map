{"version":3,"sources":["redux/actions/types.js","redux/reducers/weatherReducer.js","redux/reducers/index.js","redux/store.js","redux/actions/weatherAction.js","constants.js","components/Error/Error.jsx","components/Map/Nav/Details/Details.jsx","components/Map/Nav/Nav.jsx","utilities/gradients.js","components/Map/Map.jsx","components/Preloader/Preloader.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["FETCH_WEATHER","FETCH_ERROR","FETCH_LAT_LNG_SUCCESS","initialState","weatherData","isLoading","error","combineReducers","weather","state","action","type","payload","middleware","thunk","store","createStore","rootReducer","applyMiddleware","fetchLatLng","data","dispatch","a","fullData","map","i","fetch","process","stacja","res","json","latlng","latitude","location","lat","lng","longitude","Promise","all","POLAND_CORDS","Error","useState","MESSAGE_DEADLINE","time","setTime","useDispatch","handleCloseMessage","useCallback","useEffect","timer","setTimeout","interval","setInterval","t","clearTimeout","clearInterval","aside","className","initial","x","animate","exit","onClick","message","Details","stationInfo","temperatura","cisnienie","predkosc_wiatru","data_pomiaru","suma_opadu","Nav","station","setStation","useMap","useSelector","setStationInfo","currentStationData","stationsData","filter","toLowerCase","handleSearchCity","e","preventDefault","stationData","zoom","flyTo","every","nav","onSubmit","htmlFor","placeholder","name","id","value","onChange","target","id_stacji","addGradient","temp","tempNumber","Number","Map","isNavShow","setNav","setValue","MapContainer","center","window","innerWidth","scrollWheelZoom","TileLayer","attribution","url","GeoJSON","poland","Marker","position","opacity","eventHandlers","click","options","handleMarkerClick","Tooltip","direction","offset","permanent","Preloader","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e2ee51d5.chunk.js","sourcesContent":["export const FETCH_WEATHER = \"FETCH_WEATHER\";\r\nexport const FETCH_WEATHER_SUCCESS = \"FETCH_WEATHER_SUCCESS\";\r\nexport const FETCH_ERROR = \"FETCH_WEATHER_ERROR\";\r\nexport const FETCH_LAT_LNG = \"FETCH_LAT_LNG\";\r\nexport const FETCH_LAT_LNG_SUCCESS = \"FETCH_LAT_LNG_SUCCESS\";","import { FETCH_ERROR, FETCH_WEATHER, FETCH_LAT_LNG_SUCCESS } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    weatherData: [],\r\n    isLoading: false,\r\n    error: null,\r\n}\r\n\r\nexport default function weatherReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case FETCH_ERROR:\r\n            return {...state, isLoading: false, error: action.payload }\r\n\r\n        case FETCH_WEATHER:\r\n            return {...state, isLoading: true }\r\n\r\n        case FETCH_LAT_LNG_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                weatherData: action.payload\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport weatherReducer from \"./weatherReducer\";\r\n\r\nexport default combineReducers({\r\n    weather: weatherReducer\r\n})","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\"\r\n\r\nconst initialState = {}\r\n\r\nconst middleware = [thunk]\r\n\r\nexport const store = createStore(rootReducer, initialState, applyMiddleware(...middleware));","import { FETCH_ERROR, FETCH_LAT_LNG_SUCCESS, FETCH_WEATHER } from \"./types\";\r\n\r\nexport const fetchWeather = () => async(dispatch) => {\r\n    try {\r\n        dispatch({ type: FETCH_WEATHER })\r\n        const weather = await fetch(\"https://danepubliczne.imgw.pl/api/data/synop\");\r\n        const data = await weather.json();\r\n\r\n        dispatch(fetchLatLng(data));\r\n    } catch (error) {\r\n        dispatch({ type: FETCH_ERROR, payload: error });\r\n    }\r\n}\r\n\r\nexport const fetchLatLng = (data) => async(dispatch) => {\r\n\r\n    const fullData = data.map(async(data, i) => {\r\n        try {\r\n\r\n            const res = await fetch(`http://api.positionstack.com/v1/forward?access_key=${process.env.REACT_APP_GEOLOCATION_API_KEY}&query=${data.stacja}`);\r\n            const latlng = await res.json();\r\n\r\n            if (latlng.data[0].latitude)\r\n                return {...data, location: { lat: latlng.data[0].latitude, lng: latlng.data[0].longitude } }\r\n\r\n\r\n        } catch (error) {\r\n            dispatch({ type: FETCH_ERROR, payload: error })\r\n        }\r\n    })\r\n\r\n    dispatch({ type: FETCH_LAT_LNG_SUCCESS, payload: await Promise.all(fullData) });\r\n}","export const POLAND_CORDS = [52.505, 19.09];\r\nexport const ZOOM = 6.2;\r\nexport const ZOOM_MOBILE = 5.2;\r\nexport const MOBILE_VIEW = 460;\r\nexport const MESSAGE_DEADLINE = 5000;\r\nexport const ZOOM_INTO = 14;","import React, { useEffect, useState, useCallback } from \"react\";\r\nimport \"./error.css\";\r\nimport { motion } from \"framer-motion\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { FETCH_ERROR } from \"../../redux/actions/types\";\r\nimport { MESSAGE_DEADLINE } from \"../../constants\";\r\n\r\nexport default function Error({ error }) {\r\n  const [time, setTime] = useState(MESSAGE_DEADLINE / 1000);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleCloseMessage = useCallback(() => dispatch({ type: FETCH_ERROR, payload: null }), [dispatch]);\r\n\r\n  useEffect(() => {\r\n    const timer = setTimeout(handleCloseMessage, MESSAGE_DEADLINE);\r\n    const interval = setInterval(() => setTime((t) => t - 1), 1000);\r\n\r\n    return () => {\r\n      clearTimeout(timer);\r\n      clearInterval(interval);\r\n    };\r\n  }, [handleCloseMessage]);\r\n  return (\r\n    <motion.aside className=\"error-box\" initial={{ x: -400 }} animate={{ x: 0 }} exit={{ x: -400 }}>\r\n      <button className=\"btn del\" onClick={handleCloseMessage}>\r\n        Zamknij({time})\r\n      </button>\r\n      <p className=\"message\">{error.message}</p>\r\n    </motion.aside>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./details.css\";\r\n\r\nexport default function Details({ stationInfo }) {\r\n  return (\r\n    <section className=\"more-info-container\">\r\n      <h3 className=\"box\">{stationInfo.stacja}</h3>\r\n      <ul className=\"box details-list\">\r\n        <li className=\"details-list-item\">\r\n          <span className=\"details-label\">Temperatura:</span>\r\n          <span className=\"details-data\">{stationInfo.temperatura}&deg;</span>\r\n        </li>\r\n        <li className=\"details-list-item\">\r\n          <span className=\"details-label\">Ciśnienie:</span>\r\n          <span className=\"details-data\">{stationInfo.cisnienie} hPa</span>\r\n        </li>\r\n        <li className=\"details-list-item\">\r\n          <span className=\"details-label\">Prędkość wiatru:</span>\r\n          <span className=\"details-data\">{stationInfo.predkosc_wiatru} m/s</span>\r\n        </li>\r\n        <li className=\"details-list-item\">\r\n          <span className=\"details-label\">Data pomiaru:</span>\r\n          <span className=\"details-data\">{stationInfo.data_pomiaru}</span>\r\n        </li>\r\n        <li className=\"details-list-item\">\r\n          <span className=\"details-label\">Suma opadu:</span>\r\n          <span className=\"details-data\">\r\n            {stationInfo.suma_opadu} l/m<sup>2</sup>\r\n          </span>\r\n        </li>\r\n      </ul>\r\n    </section>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport Details from \"./Details/Details\";\r\nimport \"./nav.css\";\r\n\r\nimport { useMap } from \"react-leaflet\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { motion } from \"framer-motion\";\r\nimport { FETCH_ERROR } from \"../../../redux/actions/types\";\r\nimport { ZOOM_INTO } from \"../../../constants\";\r\n\r\nexport default function Nav({ station, setStation }) {\r\n  const map = useMap();\r\n  const weather = useSelector((state) => state.weather);\r\n  const dispatch = useDispatch();\r\n  //Take user to lat lng position\r\n  const flyToLatLng = (location, zoom) => location && zoom && map.flyTo([location.lat, location.lng], zoom);\r\n  const [stationInfo, setStationInfo] = useState(null);\r\n  //Returns searched station data\r\n  const currentStationData = useCallback(\r\n    (stationsData) =>\r\n      stationsData.filter((data) => data && data.stacja.toLowerCase() === station.toLowerCase())[0],\r\n    [station]\r\n  );\r\n  //Search for station\r\n  const handleSearchCity = (e) => {\r\n    if (e) e.preventDefault();\r\n\r\n    if (weather.weatherData) {\r\n      const stationData = currentStationData(weather.weatherData);\r\n\r\n      flyToLatLng(stationData.location, ZOOM_INTO);\r\n      setStationInfo(stationData);\r\n    }\r\n    //Error msg when station dosen't exist\r\n    if (weather.weatherData.every((data) => data.stacja.toLowerCase() === station.toLowerCase()))\r\n      dispatch({ type: FETCH_ERROR, payload: { message: \"Stacja nie istnieje!\" } });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setStationInfo(currentStationData(weather.weatherData));\r\n  }, [station, currentStationData, weather.weatherData]);\r\n\r\n  return (\r\n    <motion.nav className=\"nav-container\" initial={{ x: 400 }} animate={{ x: 0 }} exit={{ x: 400 }}>\r\n      <form className=\"search-form\" onSubmit={(e) => handleSearchCity(e)}>\r\n        <div className=\"box\">\r\n          <label className=\"search-label\" htmlFor=\"station_name\">\r\n            Podaj Stację\r\n          </label>\r\n          <input\r\n            className=\"input search-input\"\r\n            type=\"text\"\r\n            placeholder=\"Nazwa stacji\"\r\n            name=\"station_name\"\r\n            id=\"station_name\"\r\n            value={station}\r\n            onChange={(e) => setStation(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"box\">\r\n          <label className=\"search-label\" htmlFor=\"select_station\">\r\n            Lub wybierz\r\n          </label>\r\n          <select\r\n            className=\"input search-input\"\r\n            placeholder=\"Wybierz stację\"\r\n            name=\"select_station\"\r\n            id=\"select_station\"\r\n            onChange={(e) => setStation(e.target.value)}\r\n            value={station}\r\n          >\r\n            {weather.weatherData.map(\r\n              (data) =>\r\n                data && (\r\n                  <option value={data.stacja} className=\"city-option\" key={data.id_stacji}>\r\n                    {data.stacja}\r\n                  </option>\r\n                )\r\n            )}\r\n          </select>\r\n          <button className=\"btn btn-submit\">Zoom</button>\r\n        </div>\r\n      </form>\r\n\r\n      {stationInfo && <Details stationInfo={stationInfo} />}\r\n    </motion.nav>\r\n  );\r\n}\r\n","export const addGradient = (temp) => {\r\n    const tempNumber = Number(temp);\r\n    if (tempNumber >= 15) return \"hot-gradient\";\r\n    else if (temp >= 0 && tempNumber < 15) return \"cold-gradient\";\r\n    else return \"very-cold-gradient\";\r\n};","import React, { useState } from \"react\";\r\nimport Nav from \"./Nav/Nav\";\r\nimport \"./map.css\";\r\n\r\nimport { addGradient } from \"../../utilities/gradients\";\r\nimport { MOBILE_VIEW, POLAND_CORDS, ZOOM, ZOOM_MOBILE } from \"../../constants\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Tooltip, GeoJSON, MapContainer, TileLayer, Marker } from \"react-leaflet\";\r\nimport poland from \"../../poland.json\";\r\nimport { AnimatePresence } from \"framer-motion\";\r\n\r\nexport default function Map({ isNavShow, setNav }) {\r\n  //Get weather info\r\n  const weather = useSelector((state) => state.weather);\r\n  const [value, setValue] = useState(\"Bielsko Biała\");\r\n  //Take data when user clicked on marker and open nav\r\n  const handleMarkerClick = (e) => {\r\n    setNav(true);\r\n    setValue(e.target.options.name);\r\n  };\r\n\r\n  return (\r\n    <MapContainer\r\n      className=\"map\"\r\n      center={POLAND_CORDS}\r\n      zoom={window.innerWidth >= MOBILE_VIEW ? ZOOM : ZOOM_MOBILE}\r\n      scrollWheelZoom={false}\r\n    >\r\n      <TileLayer\r\n        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n      />\r\n      <GeoJSON data={poland} />\r\n\r\n      <AnimatePresence>{isNavShow && <Nav station={value} setStation={setValue} />}</AnimatePresence>\r\n\r\n      {weather.weatherData.map((data) =>\r\n        data && data.location ? (\r\n          <Marker\r\n            position={[data.location.lat, data.location.lng]}\r\n            opacity={0}\r\n            name={data.stacja}\r\n            key={data.id_stacji}\r\n            eventHandlers={{\r\n              click: (e) => {\r\n                handleMarkerClick(e);\r\n              },\r\n            }}\r\n          >\r\n            <Tooltip\r\n              direction=\"top\"\r\n              offset={[-10, 20]}\r\n              permanent\r\n              className={\"weather-info \" + addGradient(data.temperatura)}\r\n            >\r\n              <p>{data.temperatura}&deg;</p>\r\n            </Tooltip>\r\n          </Marker>\r\n        ) : null\r\n      )}\r\n    </MapContainer>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./preloader.css\";\r\n\r\nexport default function Preloader() {\r\n  return (\r\n    <section className=\"preloader\">\r\n      <span className=\"dot\"></span>\r\n      <span className=\"dot\"></span>\r\n      <span className=\"dot\"></span>\r\n    </section>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\n\nimport { fetchWeather } from \"./redux/actions/weatherAction\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport Error from \"./components/Error/Error\";\nimport Map from \"./components/Map/Map\";\nimport Preloader from \"./components/Preloader/Preloader\";\n\nimport \"./App.css\";\nimport { AnimatePresence } from \"framer-motion\";\n\nfunction App() {\n  const { isLoading, error } = useSelector((state) => ({\n    isLoading: state.weather.isLoading,\n    error: state.weather.error,\n  }));\n  const dispatch = useDispatch();\n  const [isNavShow, setNav] = useState(false);\n\n  useEffect(() => {\n    dispatch(fetchWeather());\n  }, [dispatch]);\n\n  return (\n    <main>\n      <button className=\"btn show-search-btn\" onClick={() => setNav(!isNavShow)}>\n        Wyszukaj\n      </button>\n      <AnimatePresence>{error && <Error error={error} />}</AnimatePresence>\n      {isLoading && <Preloader />}\n      <Map isNavShow={isNavShow} setNav={setNav} />\n    </main>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\nimport \"./index.css\";\nimport App from \"./App.jsx\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}